<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Class="SDA_ExtensionBoxController.MainWindow"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        Title="Break Motion Controller" Height="460" Width="260"
        x:Name="progWND">

    <Window.Resources>
        <Style TargetType="{x:Type wpfTool:IntegerUpDown}">
            <Setter Property="Margin" Value="5 0 5 0"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5 2.5 5 2.5"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="0 5 0 0" />
        </Style>
        <Style x:Key="UpArrow_ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" Margin="0.5,0,14.5,0" HorizontalAlignment="Stretch" Width="Auto">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.87"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1.5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ed:BlockArrow x:Name="arrow" Stroke="Black" Margin="0,1,-16,1" Orientation="Up" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                <ed:BlockArrow.Fill>
                                    <SolidColorBrush Color="#FFF4F4F5" />
                                </ed:BlockArrow.Fill>
                            </ed:BlockArrow>
                            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" RenderTransformOrigin="0.997,0.274" HorizontalAlignment="Center" Margin="8,8,0,8" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>

                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="#FFF4F4F5" To="Green" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                        <ColorAnimation From="Green" To="#FFF4F4F5" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RightArrow_ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" Margin="0.5,0,14.5,0" HorizontalAlignment="Stretch" Width="Auto">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.87"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1.5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ed:BlockArrow x:Name="arrow" Stroke="Black" Margin="0,1,-16,1" Orientation="Right" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                <ed:BlockArrow.Fill>
                                    <SolidColorBrush Color="#FFF4F4F5" />
                                </ed:BlockArrow.Fill>
                            </ed:BlockArrow>
                            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" RenderTransformOrigin="0.997,0.274" HorizontalAlignment="Center" Margin="8,8,0,8" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>

                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="#FFF4F4F5" To="Green" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                        <ColorAnimation From="Green" To="#FFF4F4F5" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DownArrow_ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" Margin="0.5,0,14.5,0" HorizontalAlignment="Stretch" Width="Auto">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.87"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1.5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ed:BlockArrow x:Name="arrow" Stroke="Black" Margin="0,1,-16,1" Orientation="Down" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                <ed:BlockArrow.Fill>
                                    <SolidColorBrush Color="#FFF4F4F5" />
                                </ed:BlockArrow.Fill>
                            </ed:BlockArrow>
                            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" RenderTransformOrigin="0.997,0.274" HorizontalAlignment="Center" Margin="8,8,0,8" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>

                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="#FFF4F4F5" To="Green" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                        <ColorAnimation From="Green" To="#FFF4F4F5" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LeftArrow_ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" Margin="0.5,0,14.5,0" HorizontalAlignment="Stretch" Width="Auto">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.87"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-1.5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ed:BlockArrow x:Name="arrow" Stroke="Black" Margin="0,1,-16,1" Orientation="Left" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                <ed:BlockArrow.Fill>
                                    <SolidColorBrush Color="#FFF4F4F5" />
                                </ed:BlockArrow.Fill>
                            </ed:BlockArrow>
                            <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" RenderTransformOrigin="0.997,0.274" HorizontalAlignment="Center" Margin="8,8,0,8" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>

                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation From="#FFF4F4F5" To="Green" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                        <ColorAnimation From="Green" To="#FFF4F4F5" Storyboard.TargetProperty="(ed:BlockArrow.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="arrow" Duration="00:00:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Margin="5">
            <Label Grid.Row="0" Grid.Column="1" Content="Horizontal displacement in Angstrem" />
            <wpfTool:DoubleUpDown Grid.Row="1" Grid.Column="1" CultureInfo="en-US"  x:Name="inputMovementVal" Value="1.0" FormatString="F3"/>
        </StackPanel>

        <!-- <GroupBox Grid.Row="1" Grid.Column="0" Header="Movement Direction" Margin="5">
			<StackPanel Orientation="Vertical">               
				<RadioButton x:Name="radio_up" IsChecked="True" Content="Direction UP"/>
				<RadioButton x:Name="radio_down" Content="Direction DOWN"/>
			</StackPanel>
		</GroupBox> -->

        <!-- <GroupBox Grid.Row="1" Header="COM Port Settings" Margin="5">
			<Grid Margin="2.5">
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="80"/>
				</Grid.ColumnDefinitions>

				<TextBox Grid.Row="0" Grid.Column="1" x:Name="COMPortName" Text="COM1" />
				<Label Grid.Row="0" Grid.Column="0" Content="COM Port Name" />
				<wpfTool:IntegerUpDown Grid.Row="1" Grid.Column="1" x:Name="COMPortBaudRate" Value="115200" />
				<Label Grid.Row="1" Grid.Column="0" Content="Baud Rate" />
			</Grid>
		</GroupBox> -->

        <Grid Grid.Row="1" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="80"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Row="0" Grid.Column="1" x:Name="COMPortName" Text="COM1" />
            <Label Grid.Row="0" Grid.Column="0" Content="COM Port Name" />
        </Grid>

        <Grid Grid.Row="2" Margin="5" Width="232" Height="232">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Button Style="{DynamicResource LeftArrow_ButtonStyle}" Grid.Row="1" x:Name="cmd_Left" Click="cmd_Left_Click" />
            <Button Style="{DynamicResource UpArrow_ButtonStyle}" Grid.Column="1" Margin="0" x:Name="cmd_Up" Click="cmd_Up_Click" />
            <Button Style="{DynamicResource RightArrow_ButtonStyle}" Grid.Column="2" Margin="0" Grid.Row="1" x:Name="cmd_Right" Click="cmd_Right_Click" />
            <Button Style="{DynamicResource DownArrow_ButtonStyle}" Grid.Column="1" Margin="0" Grid.Row="2" x:Name="cmd_Down" Click="cmd_Down_Click" />

            <ed:Arc ArcThicknessUnit="Pixel" Grid.Column="1" EndAngle="360" Fill="#FFF4F4F5" Margin="5" Grid.Row="1" Stretch="None" Stroke="Black" StartAngle="0"/>
        </Grid>

        <Grid Grid.Row="3" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Label Content="Parameter u [nm]:" />
            <Label Content="Parameter L [cm]:" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top"/>
            <Label Content="Psrsmeter t [mm]:" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Top"/>

            <wpfTool:DoubleUpDown x:Name="parameter_U" Grid.Column="1" Margin="2.5" Value="700"/>
            <wpfTool:DoubleUpDown x:Name="parameter_L" Grid.Column="1" Margin="2.5" Grid.Row="1" Value="3.5"/>
            <wpfTool:DoubleUpDown x:Name="parameter_t" Grid.Column="1" Margin="2.5" Grid.Row="2" Value="0.25"/>
        </Grid>
    </Grid>
</Window>
